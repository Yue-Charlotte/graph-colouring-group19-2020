/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Group19_Phase2;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import Group19_Phase2.ColorSet;


/**
 *
 * @author hp
 */
public class HintPopupJFrame extends javax.swing.JFrame {

	public int playerColorNumbers;
	public int chromaticNumber;
	public boolean completedOrNot;
	public int randomVertex;
	private ColorSet myColorSet;
	private int randomDefaultColor;


	/**
	 * Creates new form HintPopupJFrame
	 */
	public HintPopupJFrame() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		cni = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();
		crv = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		cni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Group19_Phase2/cni1.png"))); // NOI18N
		cni.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		cni.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				cniMouseClicked(evt);
			}
			public void mouseEntered(java.awt.event.MouseEvent evt) {
				cniMouseEntered(evt);
			}
			public void mouseExited(java.awt.event.MouseEvent evt) {
				cniMouseExited(evt);
			}
		});

		crv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Group19_Phase2/crv1.png"))); // NOI18N
		crv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		crv.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				crvMouseClicked(evt);
			}
			public void mouseEntered(java.awt.event.MouseEvent evt) {
				crvMouseEntered(evt);
			}
			public void mouseExited(java.awt.event.MouseEvent evt) {
				crvMouseExited(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addGap(21, 21, 21)
										.addComponent(cni))
								.addGroup(layout.createSequentialGroup()
										.addGap(27, 27, 27)
										.addComponent(crv)))
						.addContainerGap(40, Short.MAX_VALUE))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(18, 18, 18)
						.addComponent(cni)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(crv)
						.addContainerGap(35, Short.MAX_VALUE))
				);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void cniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cniMouseEntered

		cni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Group19_Phase2/cni2.png")));
	}//GEN-LAST:event_cniMouseEntered

	private void cniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cniMouseExited

		cni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Group19_Phase2/cni1.png")));
	}//GEN-LAST:event_cniMouseExited

	private void crvMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crvMouseEntered

		crv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Group19_Phase2/crv2.png")));
	}//GEN-LAST:event_crvMouseEntered

	private void crvMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crvMouseExited

		crv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Group19_Phase2/crv1.png")));
	}//GEN-LAST:event_crvMouseExited

	private void cniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cniMouseClicked
		/**
		 * color information clicked 
		 * 
		 */
		ColorNumberCheck(); // to check the color number used

	}//GEN-LAST:event_cniMouseClicked


	private void crvMouseClicked(java.awt.event.MouseEvent evt) {
		completedCheck();
	}

	public void ColorNumberCheck() {

		playerColorNumbers = Group19Phase2.G.AmountOfColoursUsed();
		chromaticNumber = Game.chromaticnumber;

		if(playerColorNumbers > chromaticNumber) {  //playerColorNumbers: currently how many colors are used, chromaticNumber : true answer
			JOptionPane.showMessageDialog(this,"You used "+(playerColorNumbers-chromaticNumber)+ " more color(s) than the correct answer" );
		}else if(playerColorNumbers == chromaticNumber) {  //playerColorNumbers: currently how many colors are used, chromaticNumber : true answer
			JOptionPane.showMessageDialog(this,"You are on the right way! Keep going! " );
		}else if(playerColorNumbers < chromaticNumber) {
			JOptionPane.showMessageDialog(this,"You still have at least "+ (chromaticNumber-playerColorNumbers) + " color(s) need to be used");
		}

	}

	/**
	 * check if the vertices are fully colored or not
	 * and if we have empty vertex it will automatically color a new vertex
	 * 
	 * unstable or unsure value need to be changed : randomVertex (have not found found a value to certain a random order of vertex now 
	 * 
	 * 
	 */
	public void completedCheck() {
		/**
		 *  one method : create a boolean in game mode class or other class and pass the value timely when click the hint then this will be 
		 *  variable : boolean completedOrNot (passed from other class)
		 *  
		 */

		if (Group19Phase2.G.HasUncolouredVertices() | Group19Phase2.G.AmountOfBadEdges() > 0) { 
			completedOrNot = false;
		}else{
			completedOrNot = true;
		}

		if(completedOrNot == true){
			JOptionPane.showMessageDialog(this,"You have colored all vertices! " );
		}else{
			//it will automatically color a new vertex with a new color
			do{
				randomVertex = (int)(Math.random()*Group19Phase2.G.GetVertexCount());//get a randomVertex
				randomDefaultColor = Group19Phase2.G.GetVertexColour(randomVertex); //that is the default uncoloured value 
			}while( randomDefaultColor != -1 ); //select a uncolored vertex
			
			assignNewColor();
		}

	}
	/** 
	 * assign a random color to the vertex
	 * recursion to check if the randomVertex has a same color with linked vertex or not
	 * if they dont have the same color then assign it 
	 */

	public void assignNewColor() {
		
		boolean shareSameColorOrNot = true;
		
		int c =  (int)(Math.random()*13);//13 is the amount of color which is from colorSet

		ArrayList<Integer> linkedVertex = new ArrayList(); 

		linkedVertex = (ArrayList<Integer>) Group19Phase2.G.Connected(randomVertex); //get all the linked vertex connected with this vertex

		int amountOflinkedVertex = linkedVertex.size();

		for(int i=1;i < amountOflinkedVertex;i++) {
		 shareSameColorOrNot = Group19Phase2.G.CheckEdgeColouring(randomVertex,linkedVertex.get(i));//check if they have same color or not
			if(shareSameColorOrNot = false) { //if not then assign and paint it
				colorRandomVertex(c);
				break;
			}
		}
		
		if(shareSameColorOrNot = true) {
			assignNewColor(); // if the assigned color are not available then go into recursion
		}

	}

	public void colorRandomVertex(int c) {
		Group19Phase2.G.SetVertexColour(randomVertex, c);
		GUI.baseFrame.repaint();
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(HintPopupJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(HintPopupJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(HintPopupJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(HintPopupJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new HintPopupJFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel cni;
	private javax.swing.JLabel crv;
	private javax.swing.JSeparator jSeparator1;
	// End of variables declaration//GEN-END:variables
}
